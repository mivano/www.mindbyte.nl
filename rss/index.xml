<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Michiel van Oudheusden]]></title><description><![CDATA[Microsoft .NET consultant, developer, architect. Focus on ALM, DevOps, APIs, Azure and everything around it.]]></description><link>http://mindbyte.nl</link><image><url>http://mindbyte.nl/images/servers.png</url><title>Michiel van Oudheusden</title><link>http://mindbyte.nl</link></image><generator>RSS for Node</generator><lastBuildDate>Fri, 25 Aug 2017 20:52:16 GMT</lastBuildDate><atom:link href="http://mindbyte.nl/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title><![CDATA[Save money in Azure by shutting down VMs]]></title><description><![CDATA[<div id="preamble">
<div class="sectionbody">
<div class="paragraph">
<p>In Azure, you pay for what you use. And when we talk about virtual machines, this means that you pay for the compute, network and storage. This is charged by the minute, so anytime you are not using the VM, you can save money by turning it off. You need to be careful though as turning it off from within the VM moves it to a stop state but still incur a cost. You need to make sure to deallocate the resources. Only in this state, you will not be <a href="https://azure.microsoft.com/en-us/pricing/details/virtual-machines/windows/">charged</a>.</p>
</div>
<div class="paragraph">
<p>So how to actually make sure the VM is deallocated? The easiest way is to use the <a href="https://portal.azure.com">Azure Portal</a>. Go to the virtual machine and select the Stop option. In the overview section you will see a <strong>Stopped (deallocated)</strong> appear which means that the VM has no cores assigned to it anymore and you will no longer be billed for it.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_automation">Automation</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Doing it manually is nice, but using automation is better. There are various ways to talk to the Azure APIs, but the Azure CLI is pretty simple to use. Make sure you install it using the <a href="https://docs.microsoft.com/en-us/cli/azure/install-azure-cli">documentation</a> first.</p>
</div>
<div class="paragraph">
<p>With the following command you can deallocate the VM called <em>ubuntu</em> in the resource group <em>vm-auto-rg</em>:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-shell" data-lang="shell">az vm deallocate --name ubuntu --resource-group vm-auto-rg</code></pre>
</div>
</div>
<div class="paragraph">
<p>Starting the same machine is easy too:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-shell" data-lang="shell">az vm start --name ubuntu --resource-group vm-auto-rg</code></pre>
</div>
</div>
<div class="paragraph">
<p>Instead of name and resource group, you can also use the <strong>--ids</strong> option to pass in the identifier of the machine. Another useful option is to add the <strong>--no-wait</strong> option which indeed does not wait for the response to be returned.</p>
</div>
<div class="paragraph">
<p>Be aware; you can also do a stop with AZ command, but this will mean the machine is still billable.</p>
</div>
<div class="sect2">
<h3 id="_auto_shutdown">Auto shutdown</h3>
<div class="paragraph">
<p>The above command you need to run manually, but luckily there are options in the Azure portal to help you. Inside the VM blade, there is an Auto-shutdown section where you indicate a schedule to automatically shutdown (meaning deallocate) your VM.</p>
</div>
<div class="imageblock">
<div class="content">
<img src="http://mindbyte.nl/images/azureautoshutdown.png" alt="azureautoshutdown.png">
</div>
</div>
<div class="paragraph">
<p>However, this does not include an option to start the VM automatically. Do consider if this is really needed, a manual start can be a better approach. This option can make sure you do not forget to turn off the machine at the end of the day.</p>
</div>
<div class="paragraph">
<p>More control you get when you use the <a href="https://azure.microsoft.com/en-us/services/devtest-lab/">Azure DevTest labs</a>. With policies, you can specify start and shutdown rules for the Virtual Machines inside the lab.</p>
</div>
</div>
<div class="sect2">
<h3 id="_runbooks">Runbooks</h3>
<div class="paragraph">
<p>Using Azure Automation you can also setup runbooks that can do similar things. A more complicated version is <a href="https://docs.microsoft.com/en-us/azure/automation/automation-solution-vm-management">this one</a> and for a more simple version, you can implement <a href="https://gallery.technet.microsoft.com/scriptcenter/Scheduled-Virtual-Machine-2162ac63">this one</a>.
By applying tags to the machines you can specify more complex schedules.</p>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_visual_studio_team_services">Visual Studio Team Services</h2>
<div class="sectionbody">
<div class="paragraph">
<p>We see we can use the Azure CLI but need something to execute this command at a certain time. Azure Automation can do this, but we can also use VSTS as it has a build system with a scheduler. One of the tasks in VSTS is the Azure CLI task. Not only does it log in for you and set a subscription, it will also execute either inline script or a file from your source control.</p>
</div>
<div class="paragraph">
<p>That shell command is a one liner:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-shell" data-lang="shell">az vm deallocate --no-wait --ids $(az resource list --tag "$1" --query "[?type=='Microsoft.Compute/virtualMachines'].id" -o tsv)</code></pre>
</div>
</div>
<div class="paragraph">
<p>It will find all machines of type VM and contain a specific tag. The resulting list will be used as the argument for the ids parameter to the AZ command. The $1 is used to capture the first parameter passed to the shell script.</p>
</div>
<div class="paragraph">
<p>We will use a Windows agent, so we need to make sure python and the AZ CLI are installed. Normally they are part of the hosted agents although at the time of writing <a href="https://github.com/Microsoft/vsts-tasks/issues/5077">this is not the case</a>. No worries, we will just install it using a PowerShell command.</p>
</div>
<div class="sect2">
<h3 id="_so_how_to_set_this_up">So how to set this up</h3>
<div class="paragraph">
<p>Create a new repository, drop the files from the <a href="https://github.com/mivano/AzureTooling/tree/master/StartStop">StartStop folder</a> in there and commit. This is not a hard requirement but having your scripts under source control is easier for maintaining them. However, you can also use inline scripts.</p>
</div>
<div class="paragraph">
<p>Next, create a new empty build, point to your repository and add a PowerShell task. We can use the inline script option and use the following as the scripts contents:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-powershell" data-lang="powershell">&amp;'C:\Program Files\Python36\python.exe' -m pip install --user azure-cli
Write-host '##vso[task.prependpath]C:\Program Files\Python36'</code></pre>
</div>
</div>
<div class="paragraph">
<p>Next, add the Azure CLI task. Select the StartVMsByTags.bat or StopVMsByTag.bat file. We are using a Windows host, so we need a batch file instead of a shell script, but both are included in the git repository. As the argument, enter the tag that you used to mark the VMs that should be turned off or on. With a scheduled trigger you set up a schedule so the build will be executed every morning, evening, weekend etc.</p>
</div>
<div class="imageblock">
<div class="content">
<img src="http://mindbyte.nl/images/azurestopvms.png" alt="azurestopvms.png">
</div>
</div>
<div class="paragraph">
<p>Create a similar build that does the reverse of what you just did; so run a build in the morning to start all the VMs in the subscription having the tag <em>AutoStart</em> and have a build in the evening to deallocate all the machines having the tag <em>AutoShutdown</em>.</p>
</div>
<div class="paragraph">
<p>You can play with different tags and schedules if that makes more sense. Do note that deallocating releases resources on the Virtual Machines, including IP addresses and when set to dynamic, you might not get the same IP back.</p>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_conclusion">Conclusion</h2>
<div class="sectionbody">
<div class="paragraph">
<p>There are various ways to move VMs to a deallocated state and even options to turn it back on. Remember this will save you a lot of money (24*31=744 compared to e.g. 8*5*4=160 hours). If you already have VSTS then it is a matter of using the Azure CLI task and some clever schedules and tags to get the same experience and start saving money.</p>
</div>
</div>
</div>]]></description><link>http://mindbyte.nl/2017/08/22/Save-money-in-Azure-by-shutting-down-V-M.html</link><guid isPermaLink="true">http://mindbyte.nl/2017/08/22/Save-money-in-Azure-by-shutting-down-V-M.html</guid><category><![CDATA[azure]]></category><dc:creator><![CDATA[Michiel van Oudheusden]]></dc:creator><pubDate>Tue, 22 Aug 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[Password complexity]]></title><description><![CDATA[<div id="preamble">
<div class="sectionbody">
<div class="paragraph">
<p>Creating a password for any site or service is difficult enough, but even more when the password needs to comply with a password policy. Minimum length, number of digits, uppercase and lowercase mixes and nonalphabetical characters are favorites. And with a bit of luck, it should also not be the same password as used in the last x password resets. Combine that with a password age so the user needs to do this exercise every number of days.</p>
</div>
<div class="imageblock">
<div class="content">
<img src="http://mindbyte.nl/images/IC212305.gif" alt="IC212305.gif">
</div>
</div>
<div class="paragraph">
<p>What we get is either a technically capable person using a password helper with long random passwords or someone with a <em>complex</em> password used on all sites. When it needs renewal, it normally has a sequential number added to it.</p>
</div>
<div class="paragraph">
<p>So creating secure and safe passwords is a challenge for sure. Passwords that look very secure, as in they match the password complexity rules, are actually not secure at all. Take for example <strong>&amp;Password1</strong>, which is of a decent size, has lower and uppercase characters, has a digit and even a non-alphabetical character. Even when we use common words it is quite often the first character which is a uppercase. A <em>e</em> becomes a <em>3</em>, a <em>0</em> for an <em>o</em> etc. Hackers know this so almost all the dictionary attacks have these words and their variations on their list.
Of course making it complex will make it harder to hack, but also harder to remember by the actual user.</p>
</div>
<div class="imageblock">
<div class="content">
<img src="http://mindbyte.nl/images/password_strength.png" alt="password strength.png">
</div>
</div>
<div class="paragraph">
<p>Although the above example shows that this is easier to remember, it is <a href="http://cups.cs.cmu.edu/soups/2012/proceedings/a7_Shay.pdf">not proven</a> to be.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_direction">Direction</h2>
<div class="sectionbody">
<div class="paragraph">
<p>We are seeing more and more that the current approach to password complexity is changing. Microsoft released a nice paper on <a href="https://www.microsoft.com/en-us/research/wp-content/uploads/2016/06/Microsoft_Password_Guidance-1.pdf">password guidance</a>, but also <a href="https://www.nist.gov/itl/tig/special-publication-800-63-3">Nist</a> published some excellent guidance.</p>
</div>
<div class="paragraph">
<p>It basically boils down to a couple of points:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Stick with a minimum 8 character password.</p>
</li>
<li>
<p>Do not allow common passwords.</p>
</li>
<li>
<p>Forgo the character composition mix.</p>
</li>
<li>
<p>Promote the use of multi factor authentication.</p>
</li>
<li>
<p>Do not force your users to reset passwords periodically.</p>
</li>
<li>
<p>Check and warn users of attack attempts.</p>
</li>
</ul>
</div>
<div class="sect2">
<h3 id="_common_passwords">Common passwords</h3>
<div class="paragraph">
<p>This is a pretty interesting one; after a lot of breaches where passwords have been made public, there is now a list of <a href="https://www.troyhunt.com/introducing-306-million-freely-downloadable-pwned-passwords/">306,259,512 unique passwords</a> which were used in those breaches. It shows that people tend to stick with common and simple passwords.</p>
</div>
<div class="paragraph">
<p>So the first step in your application where a user needs to select a password is to check if it is used in a previous breach. Troy Hunt published a list and <a href="https://www.troyhunt.com/introducing-306-million-freely-downloadable-pwned-passwords/">some guidance</a> on how to do this.</p>
</div>
<div class="paragraph">
<p>Either download the full file and do this check in your application (more control, no dependency) or use his API (make sure to hash the password before sending).</p>
</div>
<div class="paragraph">
<p>Alternatively, there are systems like <a href="https://blogs.dropbox.com/tech/2012/04/zxcvbn-realistic-password-strength-estimation/">Dropbox zxcvbn</a> which will check against patterns, a common list and the amount of time it takes to guess the password. The script will return a value and tip which can be used in a <a href="https://github.com/dropbox/zxcvbn#usage">password strength meter</a> to the user.</p>
</div>
<div class="paragraph">
<p>Make sure to also include user specific elements like username, email, full-name etc so the user cannot mix or use them in the password. Same applies to the name of your service/application.</p>
</div>
</div>
<div class="sect2">
<h3 id="_multi_factor_authentication">Multi factor authentication</h3>
<div class="paragraph">
<p>Something you know, something you have and something you are. A password is something you know. Checking a fingerprint or iris is what you are, although this is harder to check. So the something you have is a popular second-factor authentication method.</p>
</div>
<div class="paragraph">
<p>If the user has a key generator (even a soft one), it is pretty easy to <a href="http://brandonpotter.com/2014/09/07/implementing-free-two-factor-authentication-in-net-using-google-authenticator/">generate One Time Passwords</a>. Other options are SMS or phone delivery (user need to confirm the ownership of the phone) or using email (same as with phone, make sure to confirm the email address is of the user first).</p>
</div>
<div class="paragraph">
<p>When you use the default ASP.NET security framework there is reasonable support on <a href="https://docs.microsoft.com/en-us/aspnet/mvc/overview/security/aspnet-mvc-5-app-with-sms-and-email-two-factor-authentication">how to build this</a> as it is not part of the framework.</p>
</div>
</div>
<div class="sect2">
<h3 id="_third_parties">Third parties</h3>
<div class="paragraph">
<p>Consider also if you do want to maintain passwords at all. There is a lot of hassle and issues associated with this. Sometimes this is unavoidable, but it might in other cases be an option to leverage other services which can spend more time, money and resources in this area.</p>
</div>
<div class="paragraph">
<p>For the more <strong>business to consumers</strong> markets you can use Facebook, Google, Twitter etc as an authentication provider. If it is more <strong>business to business</strong>, consider using, for example, Azure Active Directory.</p>
</div>
<div class="paragraph">
<p>Be aware that you do create a dependency and lose control in favor of other benefits you might get. If you want to keep it all in-house, make use of <a href="https://identityserver.io/">Identity Server</a> and as such leverage a proven and extensive authentication system. Implementing your own security is always a bad idea :-).</p>
</div>
</div>
<div class="sect2">
<h3 id="_other_options">Other options</h3>
<div class="paragraph">
<p>Do you always need passwords? You can also just use tokens and send a link per email to the user when he tries to login in. The <a href="https://auth0.com/blog/how-passwordless-authentication-works/">passwordless authentication</a> is pretty easy. No burden at your side to maintain passwords, do resets, get stuff stolen when there is a breach etc. However, you need to trust the delivery mechanism like email and the speed of the delivery. More and more services are offering this next to their normal login as it is less typing and easier for their users, certainly with <a href="https://www.drzon.net/posts/passwordless-login-in-mobile-apps/">mobile applications</a>.</p>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_conclusion">Conclusion</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Passwords are hard; hard to remember, hard to make secure. The best intent to make them complex by requiring a mix of character types and lengths does not help. Combined with commonly used words, common replacements and placements and repetitive password reset, we make it our users pretty hard.</p>
</div>
<div class="paragraph">
<p>Support password generators (so do <a href="https://www.troyhunt.com/the-cobra-effect-that-is-disabling/">not disable clipboard paste</a> in your forms), do not have mandatory password resets and complexity, but do check against common patterns (common words, user specific values, patterns and passwords used in breaches) and keep checking and informing the user afterward.</p>
</div>
<div class="paragraph">
<p>Allow for and promote the use of multi factor authentication to add an additional layer of security.</p>
</div>
<div class="paragraph">
<p>This will make your service/application more secure and your users happier!</p>
</div>
</div>
</div>]]></description><link>http://mindbyte.nl/2017/08/05/The-complexity-of-picking-a-good-password-and-what-you-can-do-as-a-developer.html</link><guid isPermaLink="true">http://mindbyte.nl/2017/08/05/The-complexity-of-picking-a-good-password-and-what-you-can-do-as-a-developer.html</guid><category><![CDATA[security]]></category><dc:creator><![CDATA[Michiel van Oudheusden]]></dc:creator><pubDate>Sat, 05 Aug 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[Kubernetes on Azure]]></title><description><![CDATA[<div id="preamble">
<div class="sectionbody">
<div class="paragraph">
<p>There are a lot of resources on how to setup Kubernetes on Azure, but they require some prerequisites, so I wanted to make a step by step guide here.</p>
</div>
<div class="paragraph">
<p>The intent is not the explain what Kubernetes is and does, but to get you started quickly. At the end, you will have a Kubernetes cluster running in Azure and you can connect to it via your web browser.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_install_the_azure_cli">Install the Azure CLI</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Make sure you install the Azure command line interface. Version 2 is the current one which allows you to use the <strong>az</strong> command.</p>
</div>
<div class="paragraph">
<p>The instruction depends on the type of operating system, but all the steps are outlined in the <a href="https://docs.microsoft.com/en-us/cli/azure/install-azure-cli">Microsoft documentation</a>.</p>
</div>
<div class="paragraph">
<p>I&#8217;m using Windows here, so I could just <a href="https://aka.ms/InstallAzureCliWindows">download</a> the MSI directly. Follow the setup and when done, open a PowerShell box and type</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-powershell" data-lang="powershell">az</code></pre>
</div>
</div>
<div class="paragraph">
<p>This should return something like</p>
</div>
<div class="imageblock">
<div class="content">
<img src="http://mindbyte.nl/images/az.png" alt="az.png">
</div>
</div>
<div class="paragraph">
<p>If it does not, make sure you installed it correctly, have it in your path, reopen a command prompt (to refetch the environment variables).</p>
</div>
<div class="paragraph">
<p>We first need to log in, so issue the following:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-PowerShell" data-lang="PowerShell">az login</code></pre>
</div>
</div>
<div class="paragraph">
<p>This will point you to a web page where you fill in the given code and login. When done, it has a connection between your account and the Azure tooling.</p>
</div>
<div class="paragraph">
<p>Time to start deploying&#8230;&#8203;</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_resource_group">Resource group</h2>
<div class="sectionbody">
<div class="paragraph">
<p>We will deploy using a resource group, so we first create one using the az group command:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-PowerShell" data-lang="PowerShell">az group create --name=kub-rg --location=westeurope</code></pre>
</div>
</div>
<div class="paragraph">
<p>I call my group <strong>kub-rg</strong> and locate it in west europe. After creation, it will show some details.</p>
</div>
<div class="imageblock">
<div class="content">
<img src="http://mindbyte.nl/images/azgroup.png" alt="azgroup.png">
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_kubernetes">Kubernetes</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Installing a Kubernetes cluster works via the same AZ tooling since it allows you to create containers.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-PowerShell" data-lang="PowerShell">az acs create --orchestrator-type=kubernetes --resource-group=kub-rg --name=mivano-kub-cluster --dns-prefix=mivano-kub --generate-ssh-key</code></pre>
</div>
</div>
<div class="paragraph">
<p>We create an Azure Container Service, using the kubernetes type option. We use our already created resource group and give it a name and DNS prefix. This will take some minutes before it completes. A Windows container option is in public preview, but can also be created by specifying the '--windows' option.</p>
</div>
<div class="paragraph">
<p>Once completed it will show you an overview.</p>
</div>
<div class="imageblock">
<div class="content">
<img src="http://mindbyte.nl/images/azkubdone.png" alt="azkubdone.png">
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_kubectl">kubectl</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Similar to the Azure CLI, you also have a Kubernetes CLI. You can download this from the <a href="https://kubernetes.io/docs/tasks/tools/install-kubectl/">Kubernetes</a> site or use the AZ tooling to get it:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-PowerShell" data-lang="PowerShell">az acs kubernetes install-cli</code></pre>
</div>
</div>
<div class="imageblock">
<div class="content">
<img src="http://mindbyte.nl/images/azkubectl.png" alt="azkubectl.png">
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_connect_kubectl">Connect kubectl</h2>
<div class="sectionbody">
<div class="paragraph">
<p>We now need to tell kubectl how to connect to our Kubernetes cluster. Luckily the Azure tooling can handle that for us.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-PowerShell" data-lang="PowerShell">az acs kubernetes get-credentials --resource-group=kub-rg --name=mivano-kub-cluster</code></pre>
</div>
</div>
<div class="paragraph">
<p>This will not return anything, so let&#8217;s check if we are indeed able to connect.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-PowerShell" data-lang="PowerShell">kubectl get nodes</code></pre>
</div>
</div>
<div class="paragraph">
<p>You should see a list of nodes.</p>
</div>
<div class="imageblock">
<div class="content">
<img src="http://mindbyte.nl/images/kubnodes.png" alt="kubnodes.png">
</div>
</div>
<div class="paragraph">
<p>You can now send commands to your Kubernetest cluster running in Azure.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_use_the_dashboard">Use the dashboard</h2>
<div class="sectionbody">
<div class="paragraph">
<p>If you are a CLI guy, then stop here, but if you want to see a nice dashboard, keep reading. Kubernetes has a UI which you can invoke using the following command:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-PowerShell" data-lang="PowerShell">az acs kubernetes browse -g kub-rg -n mivano-kub-cluster</code></pre>
</div>
</div>
<div class="paragraph">
<p>This will start a webserver and opens your browser pointing to your localhost. You will see a nice UI where you can do most of the work.</p>
</div>
<div class="imageblock">
<div class="content">
<img src="http://mindbyte.nl/images/kubui.png" alt="kubui.png">
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_deleting_the_cluster">Deleting the cluster</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Remember that everything you run in Azure cost money, so clean if you are not using it anymore. Since we created a resource group, we can just drop this group to get rid of everything.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-PowerShell" data-lang="PowerShell">az group delete --name kub-rg</code></pre>
</div>
</div>
<div class="paragraph">
<p>This will take some time to complete.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_conclusion">Conclusion</h2>
<div class="sectionbody">
<div class="paragraph">
<p>With some easy tools, you can spin up a Kubernetes cluster on Azure and connect it. With the same tooling, you can scale your cluster and talk to Kubernetes or invoke the web UI. Let&#8217;s see in further posts what we can do with this cluster.</p>
</div>
</div>
</div>]]></description><link>http://mindbyte.nl/2017/08/05/Kubernetes-on-Azure.html</link><guid isPermaLink="true">http://mindbyte.nl/2017/08/05/Kubernetes-on-Azure.html</guid><category><![CDATA[azure]]></category><category><![CDATA[docker]]></category><category><![CDATA[kubernetes]]></category><dc:creator><![CDATA[Michiel van Oudheusden]]></dc:creator><pubDate>Sat, 05 Aug 2017 00:00:00 GMT</pubDate></item></channel></rss>